services:
  postgres:
    container_name: postgres
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - database:/var/lib/postgresql/data

  rest_api:
    container_name: rest_api
    build: ./rest_api
    command: bash -c "rails s -b 0.0.0.0 -p 5000"
    tty: true
    stdin_open: true
    env_file:
      - ./rest_api/.env
    ports:
      - "5000:5000"
    entrypoint: ./entrypoint.sh
    volumes:
      - ./rest_api:/app
      - rubygems:/usr/local/bundle
    depends_on:
      postgres:
        condition: service_started
      rabbitmq:
        condition: service_healthy
  
  graphql_api:
    container_name: graphql_api
    build: ./graphql_api
    command: bash -c "rails s -b 0.0.0.0 -p 3001"
    env_file:
      - ./graphql_api/.env
    ports:
      - "3001:3001"
    volumes:
      - ./graphql_api:/app
    entrypoint: ./entrypoint.sh
    depends_on:
      - rest_api

  web_app:
    tty: true
    stdin_open: true
    container_name: web_app
    command: 'rackup'
    build: ./web_app
    env_file:
      - ./web_app/.env
    volumes:
      - ./web_app:/app
      - rubygems:/usr/local/bundle
    depends_on:
      - rest_api
    ports:
      - "3000:3000"

  sneakers:
    tty: true
    stdin_open: true
    container_name: sneakers
    build: ./rest_api
    env_file:
      - ./rest_api/.env
    command: bash -c "sneakers work PolicyWorker --require app/workers/policy_worker.rb"
    volumes:
      - ./rest_api:/app
      - rubygems:/usr/local/bundle
    depends_on:
      - rest_api

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    env_file:
      - .env
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq:/var/lib/rabbitmq
    healthcheck: 
      test: ["CMD", "rabbitmqctl","await_startup"]
      interval: 5s

volumes:
  rubygems:
  database:
  rabbitmq: